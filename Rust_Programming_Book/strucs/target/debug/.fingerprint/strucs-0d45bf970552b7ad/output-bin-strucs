{"$message_type":"diagnostic","message":"`derive` may only be applied to `struct`s, `enum`s and `union`s","code":{"code":"E0774","explanation":"`derive` was applied on something which is not a struct, a union or an enum.\n\nErroneous code example:\n\n```compile_fail,E0774\ntrait Foo {\n    #[derive(Clone)] // error!\n    type Bar;\n}\n```\n\nAs said above, the `derive` attribute is only allowed on structs, unions or\nenums:\n\n```\n#[derive(Clone)] // ok!\nstruct Bar {\n    field: u32,\n}\n```\n\nYou can find more information about `derive` in the [Rust Book].\n\n[Rust Book]: https://doc.rust-lang.org/book/appendix-03-derivable-traits.html\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":0,"byte_end":16,"line_start":1,"line_end":1,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":1,"highlight_end":17}],"label":"not applicable here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":298,"byte_end":1332,"line_start":20,"line_end":55,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":12},{"text":"    // let mut user1 = User{","highlight_start":1,"highlight_end":29},{"text":"    //     active:true,","highlight_start":1,"highlight_end":24},{"text":"    //     username:String::from(\"Nextron\"),","highlight_start":1,"highlight_end":45},{"text":"    //     email:String::from(\"nextron@gmail.com\"),","highlight_start":1,"highlight_end":52},{"text":"    //     sign_in_count:5,","highlight_start":1,"highlight_end":28},{"text":"        ","highlight_start":1,"highlight_end":9},{"text":"    // };","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // user1.email = String::from(\"Current@gmail.com\");","highlight_start":1,"highlight_end":56},{"text":"    // println!(\"User status:{}\",user1.active);","highlight_start":1,"highlight_end":48},{"text":"    // println!(\"User name:{}\",user1.username);","highlight_start":1,"highlight_end":48},{"text":"    // println!(\"User email:{}\",user1.email);","highlight_start":1,"highlight_end":46},{"text":"    // println!(\"User sign_in_count:{}\",user1.sign_in_count);","highlight_start":1,"highlight_end":62},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // let user2 = User{","highlight_start":1,"highlight_end":25},{"text":"    //     active:user1.active,","highlight_start":1,"highlight_end":32},{"text":"    //     username:user1.username,","highlight_start":1,"highlight_end":36},{"text":"    //     email:user1.email,","highlight_start":1,"highlight_end":30},{"text":"    //     sign_in_count:user1.sign_in_count,","highlight_start":1,"highlight_end":46},{"text":"    // };","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // println!(\"User status:{}\",user2.active);","highlight_start":1,"highlight_end":48},{"text":"    // println!(\"User name:{}\",user2.username);","highlight_start":1,"highlight_end":48},{"text":"    // println!(\"User email:{}\",user2.email);","highlight_start":1,"highlight_end":46},{"text":"    // println!(\"User sign_in_count {}\",user2.sign_in_count);","highlight_start":1,"highlight_end":62},{"text":"","highlight_start":1,"highlight_end":1},{"text":"//     let rect1 = Rectangle {","highlight_start":1,"highlight_end":31},{"text":"//         width:30,","highlight_start":1,"highlight_end":21},{"text":"//         height:50,","highlight_start":1,"highlight_end":22},{"text":"//     };","highlight_start":1,"highlight_end":10},{"text":"//    let results = area(&rect1);","highlight_start":1,"highlight_end":34},{"text":"//    println!(\"The Area is {results}\");","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// rect1.area();","highlight_start":1,"highlight_end":17},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"not a `struct`, `enum` or `union`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0774]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `derive` may only be applied to `struct`s, `enum`s and `union`s\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:1:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot applicable here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // let mut user1 = User{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    //     active:true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    //     username:String::from(\"Nextron\"),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// rect1.area();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mnot a `struct`, `enum` or `union`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0774`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0774`.\u001b[0m\n"}
